@page "/games/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]
@inject HttpInterceptorService _interceptor
@implements IDisposable

<h3 class="card-title">Explore Games</h3>
<h5>Wide selection of games of different genres</h5>
<br />

<a href="/games/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Game
</a>
<br />
<br />

@if (Games == null)
{
    <div class="alert alert-info">Loading Games...</div>
}
else
{
    <table class="table table-responsive" id="bookingsTable">
        <thead>
            <tr>
                <th>Image</th>
                <th>Title</th>
                <th>Overall Rating</th>
                <th>Genre</th>
                <th>Description</th>
                <th>Developer</th>
                <th>Publisher</th>
                <th>Release Date</th>
                <th>Platform(s)</th>
                <th>Content Rating</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var game in Games)
            {
                <tr>
                    <td>
                        @if (game.Image != null)
                        {
                            <img src="@($"data:image/jpeg;base64,{game.Image}")" width="140" height="140"/>
                        }
                        else
                        {
                            <img src="noimage.jpeg" width="140" height="140" />
                        }
                    </td>
                    <td>@game.Title</td>
                    <td>
                        @if (game.OverallRating >= 7)
                        {
                            <span style="color: #4dff88">@game.OverallRating</span>
                        }
                        else if (game.OverallRating >= 5)
                        {
                            <span style="color: #ffcc00">@game.OverallRating</span>
                        }
                        else
                        {
                            <span style="color: #ff4d4d">@game.OverallRating</span>
                        }
                    </td>
                    <td>@game.Genre</td>
                    <td>@game.Description</td>
                    <td>@game.Developer</td>
                    <td>@game.Publisher</td>
                    <td>@game.ReleaseDate.ToString("dd/MM/yyyy")</td>
                    <td>@game.Platform</td>
                    <td>@game.ContentRating</td>
                    <td>
                        <a href="/games/view/@game.Id" class="btn btn-primary">
                            <span class="oi oi-eye"></span>
                        </a>
                        <a href="/games/edit/@game.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(()=>Delete(game.Id))">
                            <span class="oi oi-trash"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <BottomInfo />
}

@code {
    private List<Game>? Games;

    protected async override Task OnInitializedAsync()
    {
        _interceptor.MonitorEvent();
        Games = await _client.GetFromJsonAsync<List<Game>>($"{Endpoints.GamesEndpoint}");
    }

    async Task Delete(int gameId)
    {
        if (Games != null)
        {
            var game = Games.First(q => q.Id == gameId);
            var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {game.Title}?");
            if (confirm)
            {
                await _client.DeleteAsync($"{Endpoints.GamesEndpoint}/{gameId}");
                await OnInitializedAsync();
            }
        }
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        await js.InvokeVoidAsync("AddDataTable", "#bookingsTable");
    }

    public void Dispose()
    {
        _interceptor.DisposeEvent();
        js.InvokeVoidAsync("DataTablesDispose", "#bookingsTable");
    }
}
