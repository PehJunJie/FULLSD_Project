// <auto-generated />
using System;
using GameVerse.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameVerse.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes", (string)null);
                });

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.Key", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Algorithm")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DataProtected")
                        .HasColumnType("bit");

                    b.Property<bool>("IsX509Certificate")
                        .HasColumnType("bit");

                    b.Property<string>("Use")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Use");

                    b.ToTable("Keys", (string)null);
                });

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ConsumedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Key");

                    b.HasIndex("ConsumedTime");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.HasIndex("SubjectId", "SessionId", "Type");

                    b.ToTable("PersistedGrants", (string)null);
                });

            modelBuilder.Entity("GameVerse.Server.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "3781efa7-66dc-47f0-860f-e506d04102e4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ce94c078-30e0-4ab7-a3e7-4604dcc843a7",
                            Email = "admin@localhost.com",
                            EmailConfirmed = false,
                            FirstName = "Admin",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@LOCALHOST.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAIAAYagAAAAED4XIjYEQ0H3SxZnTqLj0D4JCO/n87fca09P/O9+/OoJ7eAqI9zMPsh7jChwErRDEA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c7da545c-a5f1-492a-b385-29201473279f",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("GameVerse.Shared.Domain.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CommunityId")
                        .HasColumnType("int");

                    b.Property<int?>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CommunityId");

                    b.HasIndex("ConsumerId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommentDate = new DateTime(2024, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CommunityId = 1,
                            ConsumerId = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(3433),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(3447),
                            Text = "I love playing Honkai: Star Rail!",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CommentDate = new DateTime(2023, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CommunityId = 2,
                            ConsumerId = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(3451),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(3452),
                            Text = "LE SSERAFIM x Overwatch2 collab is sick!",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("GameVerse.Shared.Domain.Community", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Communities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(4094),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(4097),
                            Description = "Join us for all things Star Rail!",
                            MemberCount = 1530524,
                            Name = "Star Rail Official",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(4100),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(4101),
                            Description = "Discuss all things Overwatch.",
                            MemberCount = 127402,
                            Name = "Overwatch Community",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("GameVerse.Shared.Domain.Consumer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Consumers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 25,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(4542),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(4547),
                            EmailAddress = "johnsmith@gmail.com",
                            Name = "John Smith",
                            UpdatedBy = "System",
                            UserName = "jsmithy"
                        },
                        new
                        {
                            Id = 2,
                            Age = 22,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(4549),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(4550),
                            EmailAddress = "marryjones@gmail.com",
                            Name = "Marry Jones",
                            UpdatedBy = "System",
                            UserName = "joneygirl"
                        });
                });

            modelBuilder.Entity("GameVerse.Shared.Domain.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentRating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Developer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OverallRating")
                        .HasColumnType("float");

                    b.Property<string>("Platform")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContentRating = "E10+",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(5004),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(5005),
                            Description = "A sequel to The Legend of Zelda: Breath of the Wild. The game lets you explore a large and diverse world of Hyrule and its mysterious islands. You can choose your own adventure and use Link’s new abilities to fight back against the malevolent forces.",
                            Developer = "Nintendo",
                            Genre = "Open-World Action",
                            OverallRating = 8.4000000000000004,
                            Platform = "Nintendo Switch",
                            Publisher = "Nintendo",
                            ReleaseDate = new DateTime(2023, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Legend of Zelda: Tears of the Kingdom",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            ContentRating = "T",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(5009),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(5010),
                            Description = "A space sci-fi role-playing game that combines myths and legends with exploration and combat. Players will board the Astral Express and visit different worlds, meet companions, and resolving [Stellaron]-related conflicts. The game has a simple and strategic combat system and large maps with puzzles and surprises.",
                            Developer = "Cognosphere",
                            Genre = "Role-Playing",
                            OverallRating = 6.5,
                            Platform = "PC, iOS, Android, PlayStation 5",
                            Publisher = "miHoYo",
                            ReleaseDate = new DateTime(2023, 4, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Honkai: Star Rail",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            ContentRating = "E",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(5014),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(5015),
                            Description = "Out-build the competition in the all-new career. Race your friends in adjudicated multiplayer events. Compete in over 500 cars on world-famous tracks with cutting edge AI, advanced physics, and tire and fuel strategy.",
                            Developer = "Turn 10",
                            Genre = "Racing Sim",
                            OverallRating = 7.5,
                            Platform = "PC, Xbox Series X",
                            Publisher = "Xbox Game Studios",
                            ReleaseDate = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Forza Motorsport Standard Edition",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("GameVerse.Shared.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AmountPaid")
                        .HasColumnType("float");

                    b.Property<int?>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderedGames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConsumerId");

                    b.HasIndex("PaymentId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmountPaid = 100.5,
                            ConsumerId = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(5464),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(5468),
                            OrderDate = new DateTime(2024, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderedGames = "Forza Horizon 5, NBA 2K24",
                            PaymentId = 1,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            AmountPaid = 16.300000000000001,
                            ConsumerId = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(5472),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(5472),
                            OrderDate = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(5470),
                            OrderedGames = "Borderslands 3, BOKURA",
                            PaymentId = 2,
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("GameVerse.Shared.Domain.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(5965),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(5968),
                            Method = "DBS/POSB",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(5970),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(5971),
                            Method = "OCBC",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(5973),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(5974),
                            Method = "UOB",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(5975),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(5976),
                            Method = "Citybank",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("GameVerse.Shared.Domain.Recommendation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Recommendations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(6352),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(6354),
                            GameId = 1,
                            Rank = 1,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(6356),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(6357),
                            GameId = 2,
                            Rank = 2,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(6359),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(6360),
                            GameId = 3,
                            Rank = 3,
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("GameVerse.Shared.Domain.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("ReviewRating")
                        .HasColumnType("float");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConsumerId");

                    b.HasIndex("GameId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConsumerId = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(6761),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(6763),
                            GameId = 1,
                            ReviewDate = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewRating = 8.0,
                            Text = "The game provides a lot of freebies, leveling up every quickly without spending money.",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            ConsumerId = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(6767),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(6768),
                            GameId = 2,
                            ReviewDate = new DateTime(2023, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewRating = 4.5,
                            Text = "I the game turns out to be pretty bad with frequent bugs.",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("GameVerse.Shared.Domain.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AvailabilityStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("DiscountedPrice")
                        .HasColumnType("float");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<double>("OriginalPrice")
                        .HasColumnType("float");

                    b.Property<bool>("Subscription")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvailabilityStatus = "Not Available",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(7096),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(7097),
                            DiscountedPrice = 57.0,
                            GameId = 1,
                            OriginalPrice = 69.989999999999995,
                            Subscription = true,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            AvailabilityStatus = "Available",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(7101),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(7101),
                            DiscountedPrice = 85.900000000000006,
                            GameId = 3,
                            OriginalPrice = 99.900000000000006,
                            Subscription = false,
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("GameVerse.Shared.Domain.Wishlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Games")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConsumerId");

                    b.ToTable("Wishlists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConsumerId = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(7316),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(7317),
                            Games = "Mario vs. Donkey Kong, Open Roads",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            ConsumerId = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(7318),
                            DateUpdated = new DateTime(2024, 1, 19, 10, 25, 40, 792, DateTimeKind.Local).AddTicks(7319),
                            Games = "Hyper Light Breaker",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "ad2bcf0c-20db-474f-8407-5a6b159518ba",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "bd2bcf0c-20db-474f-8407-5a6b159518bb",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "3781efa7-66dc-47f0-860f-e506d04102e4",
                            RoleId = "ad2bcf0c-20db-474f-8407-5a6b159518ba"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("GameVerse.Shared.Domain.Comment", b =>
                {
                    b.HasOne("GameVerse.Shared.Domain.Community", "Community")
                        .WithMany()
                        .HasForeignKey("CommunityId");

                    b.HasOne("GameVerse.Shared.Domain.Consumer", "Consumer")
                        .WithMany()
                        .HasForeignKey("ConsumerId");

                    b.Navigation("Community");

                    b.Navigation("Consumer");
                });

            modelBuilder.Entity("GameVerse.Shared.Domain.Order", b =>
                {
                    b.HasOne("GameVerse.Shared.Domain.Consumer", "Consumer")
                        .WithMany("Orders")
                        .HasForeignKey("ConsumerId");

                    b.HasOne("GameVerse.Shared.Domain.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId");

                    b.Navigation("Consumer");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("GameVerse.Shared.Domain.Recommendation", b =>
                {
                    b.HasOne("GameVerse.Shared.Domain.Game", "Game")
                        .WithMany("Recommedations")
                        .HasForeignKey("GameId");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameVerse.Shared.Domain.Review", b =>
                {
                    b.HasOne("GameVerse.Shared.Domain.Consumer", "Consumer")
                        .WithMany("Reviews")
                        .HasForeignKey("ConsumerId");

                    b.HasOne("GameVerse.Shared.Domain.Game", "Game")
                        .WithMany("Reviews")
                        .HasForeignKey("GameId");

                    b.Navigation("Consumer");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameVerse.Shared.Domain.Store", b =>
                {
                    b.HasOne("GameVerse.Shared.Domain.Game", "Game")
                        .WithMany("Stores")
                        .HasForeignKey("GameId");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameVerse.Shared.Domain.Wishlist", b =>
                {
                    b.HasOne("GameVerse.Shared.Domain.Consumer", "Consumer")
                        .WithMany("Wishlists")
                        .HasForeignKey("ConsumerId");

                    b.Navigation("Consumer");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("GameVerse.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("GameVerse.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameVerse.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("GameVerse.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameVerse.Shared.Domain.Consumer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("Wishlists");
                });

            modelBuilder.Entity("GameVerse.Shared.Domain.Game", b =>
                {
                    b.Navigation("Recommedations");

                    b.Navigation("Reviews");

                    b.Navigation("Stores");
                });
#pragma warning restore 612, 618
        }
    }
}
